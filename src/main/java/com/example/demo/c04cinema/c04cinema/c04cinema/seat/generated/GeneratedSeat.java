package com.example.demo.c04cinema.c04cinema.c04cinema.seat.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.hall.Hall;
import com.example.demo.c04cinema.c04cinema.c04cinema.seat.Seat;
import com.example.demo.c04cinema.c04cinema.c04cinema.seat_type.SeatType;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableForeignKeyField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.util.Optional;
import java.util.OptionalInt;

/**
 * The generated base for the {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.seat.Seat}-interface
 * representing entities of the {@code seat}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedSeat {
    
    /**
     * This Field corresponds to the {@link Seat} field that can be obtained
     * using the {@link Seat#getId()} method.
     */
    IntField<Seat, Integer> ID = IntField.create(
        Identifier.ID,
        Seat::getId,
        Seat::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link Seat} field that can be obtained
     * using the {@link Seat#getName()} method.
     */
    StringField<Seat, String> NAME = StringField.create(
        Identifier.NAME,
        o -> OptionalUtil.unwrap(o.getName()),
        Seat::setName,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Seat} field that can be obtained
     * using the {@link Seat#getHallId()} method.
     */
    ComparableForeignKeyField<Seat, Integer, Integer, Hall> HALL_ID = ComparableForeignKeyField.create(
        Identifier.HALL_ID,
        o -> OptionalUtil.unwrap(o.getHallId()),
        Seat::setHallId,
        Hall.ID,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Seat} field that can be obtained
     * using the {@link Seat#getSeatTypeId()} method.
     */
    ComparableForeignKeyField<Seat, Integer, Integer, SeatType> SEAT_TYPE_ID = ComparableForeignKeyField.create(
        Identifier.SEAT_TYPE_ID,
        o -> OptionalUtil.unwrap(o.getSeatTypeId()),
        Seat::setSeatTypeId,
        SeatType.ID,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the id of this Seat. The id field corresponds to the database
     * column c04cinema.c04cinema.seat.id.
     * 
     * @return the id of this Seat
     */
    int getId();
    
    /**
     * Returns the name of this Seat. The name field corresponds to the database
     * column c04cinema.c04cinema.seat.name.
     * 
     * @return the name of this Seat
     */
    Optional<String> getName();
    
    /**
     * Returns the hallId of this Seat. The hallId field corresponds to the
     * database column c04cinema.c04cinema.seat.hall_id.
     * 
     * @return the hallId of this Seat
     */
    OptionalInt getHallId();
    
    /**
     * Returns the seatTypeId of this Seat. The seatTypeId field corresponds to
     * the database column c04cinema.c04cinema.seat.seat_type_id.
     * 
     * @return the seatTypeId of this Seat
     */
    OptionalInt getSeatTypeId();
    
    /**
     * Sets the id of this Seat. The id field corresponds to the database column
     * c04cinema.c04cinema.seat.id.
     * 
     * @param id to set of this Seat
     * @return   this Seat instance
     */
    Seat setId(int id);
    
    /**
     * Sets the name of this Seat. The name field corresponds to the database
     * column c04cinema.c04cinema.seat.name.
     * 
     * @param name to set of this Seat
     * @return     this Seat instance
     */
    Seat setName(String name);
    
    /**
     * Sets the hallId of this Seat. The hallId field corresponds to the
     * database column c04cinema.c04cinema.seat.hall_id.
     * 
     * @param hallId to set of this Seat
     * @return       this Seat instance
     */
    Seat setHallId(Integer hallId);
    
    /**
     * Sets the seatTypeId of this Seat. The seatTypeId field corresponds to the
     * database column c04cinema.c04cinema.seat.seat_type_id.
     * 
     * @param seatTypeId to set of this Seat
     * @return           this Seat instance
     */
    Seat setSeatTypeId(Integer seatTypeId);
    
    /**
     * Queries the specified manager for the referenced Hall. If no such Hall
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Optional<Hall> findHallId(Manager<Hall> foreignManager);
    
    /**
     * Queries the specified manager for the referenced SeatType. If no such
     * SeatType exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Optional<SeatType> findSeatTypeId(Manager<SeatType> foreignManager);
    
    enum Identifier implements ColumnIdentifier<Seat> {
        
        ID           ("id"),
        NAME         ("name"),
        HALL_ID      ("hall_id"),
        SEAT_TYPE_ID ("seat_type_id");
        
        private final String columnId;
        private final TableIdentifier<Seat> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "c04cinema";
        }
        
        @Override
        public String getSchemaId() {
            return "c04cinema";
        }
        
        @Override
        public String getTableId() {
            return "seat";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Seat> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}