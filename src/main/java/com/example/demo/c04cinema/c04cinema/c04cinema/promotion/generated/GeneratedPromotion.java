package com.example.demo.c04cinema.c04cinema.c04cinema.promotion.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.customer.Customer;
import com.example.demo.c04cinema.c04cinema.c04cinema.movie.Movie;
import com.example.demo.c04cinema.c04cinema.c04cinema.promotion.Promotion;
import com.example.demo.c04cinema.c04cinema.c04cinema.show.Show;
import com.example.demo.c04cinema.c04cinema.c04cinema.staff.Staff;
import com.example.demo.c04cinema.c04cinema.c04cinema.theatre.Theatre;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.ComparableForeignKeyField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.sql.Date;
import java.util.Optional;
import java.util.OptionalDouble;
import java.util.OptionalInt;

/**
 * The generated base for the {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.promotion.Promotion}-interface
 * representing entities of the {@code promotion}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedPromotion {
    
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getId()} method.
     */
    IntField<Promotion, Integer> ID = IntField.create(
        Identifier.ID,
        Promotion::getId,
        Promotion::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getCode()} method.
     */
    StringField<Promotion, String> CODE = StringField.create(
        Identifier.CODE,
        o -> OptionalUtil.unwrap(o.getCode()),
        Promotion::setCode,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getName()} method.
     */
    StringField<Promotion, String> NAME = StringField.create(
        Identifier.NAME,
        o -> OptionalUtil.unwrap(o.getName()),
        Promotion::setName,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getDiscount()} method.
     */
    ComparableField<Promotion, Double, Double> DISCOUNT = ComparableField.create(
        Identifier.DISCOUNT,
        o -> OptionalUtil.unwrap(o.getDiscount()),
        Promotion::setDiscount,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getDescription()} method.
     */
    StringField<Promotion, String> DESCRIPTION = StringField.create(
        Identifier.DESCRIPTION,
        o -> OptionalUtil.unwrap(o.getDescription()),
        Promotion::setDescription,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getStartDate()} method.
     */
    ComparableField<Promotion, Date, Date> START_DATE = ComparableField.create(
        Identifier.START_DATE,
        o -> OptionalUtil.unwrap(o.getStartDate()),
        Promotion::setStartDate,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getEndDate()} method.
     */
    ComparableField<Promotion, Date, Date> END_DATE = ComparableField.create(
        Identifier.END_DATE,
        o -> OptionalUtil.unwrap(o.getEndDate()),
        Promotion::setEndDate,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getShowId()} method.
     */
    ComparableForeignKeyField<Promotion, Integer, Integer, Show> SHOW_ID = ComparableForeignKeyField.create(
        Identifier.SHOW_ID,
        o -> OptionalUtil.unwrap(o.getShowId()),
        Promotion::setShowId,
        Show.ID,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getMoveId()} method.
     */
    ComparableForeignKeyField<Promotion, Integer, Integer, Movie> MOVE_ID = ComparableForeignKeyField.create(
        Identifier.MOVE_ID,
        o -> OptionalUtil.unwrap(o.getMoveId()),
        Promotion::setMoveId,
        Movie.ID,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getTheatreId()} method.
     */
    ComparableForeignKeyField<Promotion, Integer, Integer, Theatre> THEATRE_ID = ComparableForeignKeyField.create(
        Identifier.THEATRE_ID,
        o -> OptionalUtil.unwrap(o.getTheatreId()),
        Promotion::setTheatreId,
        Theatre.ID,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getCustomerId()} method.
     */
    ComparableForeignKeyField<Promotion, Integer, Integer, Customer> CUSTOMER_ID = ComparableForeignKeyField.create(
        Identifier.CUSTOMER_ID,
        o -> OptionalUtil.unwrap(o.getCustomerId()),
        Promotion::setCustomerId,
        Customer.ID,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getStaffId()} method.
     */
    ComparableForeignKeyField<Promotion, Integer, Integer, Staff> STAFF_ID = ComparableForeignKeyField.create(
        Identifier.STAFF_ID,
        o -> OptionalUtil.unwrap(o.getStaffId()),
        Promotion::setStaffId,
        Staff.ID,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getPrice()} method.
     */
    ComparableField<Promotion, Double, Double> PRICE = ComparableField.create(
        Identifier.PRICE,
        o -> OptionalUtil.unwrap(o.getPrice()),
        Promotion::setPrice,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link Promotion} field that can be
     * obtained using the {@link Promotion#getPicture()} method.
     */
    StringField<Promotion, String> PICTURE = StringField.create(
        Identifier.PICTURE,
        o -> OptionalUtil.unwrap(o.getPicture()),
        Promotion::setPicture,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the id of this Promotion. The id field corresponds to the
     * database column c04cinema.c04cinema.promotion.id.
     * 
     * @return the id of this Promotion
     */
    int getId();
    
    /**
     * Returns the code of this Promotion. The code field corresponds to the
     * database column c04cinema.c04cinema.promotion.code.
     * 
     * @return the code of this Promotion
     */
    Optional<String> getCode();
    
    /**
     * Returns the name of this Promotion. The name field corresponds to the
     * database column c04cinema.c04cinema.promotion.name.
     * 
     * @return the name of this Promotion
     */
    Optional<String> getName();
    
    /**
     * Returns the discount of this Promotion. The discount field corresponds to
     * the database column c04cinema.c04cinema.promotion.discount.
     * 
     * @return the discount of this Promotion
     */
    OptionalDouble getDiscount();
    
    /**
     * Returns the description of this Promotion. The description field
     * corresponds to the database column
     * c04cinema.c04cinema.promotion.description.
     * 
     * @return the description of this Promotion
     */
    Optional<String> getDescription();
    
    /**
     * Returns the startDate of this Promotion. The startDate field corresponds
     * to the database column c04cinema.c04cinema.promotion.startDate.
     * 
     * @return the startDate of this Promotion
     */
    Optional<Date> getStartDate();
    
    /**
     * Returns the endDate of this Promotion. The endDate field corresponds to
     * the database column c04cinema.c04cinema.promotion.endDate.
     * 
     * @return the endDate of this Promotion
     */
    Optional<Date> getEndDate();
    
    /**
     * Returns the showId of this Promotion. The showId field corresponds to the
     * database column c04cinema.c04cinema.promotion.show_id.
     * 
     * @return the showId of this Promotion
     */
    OptionalInt getShowId();
    
    /**
     * Returns the moveId of this Promotion. The moveId field corresponds to the
     * database column c04cinema.c04cinema.promotion.move_id.
     * 
     * @return the moveId of this Promotion
     */
    OptionalInt getMoveId();
    
    /**
     * Returns the theatreId of this Promotion. The theatreId field corresponds
     * to the database column c04cinema.c04cinema.promotion.theatre_id.
     * 
     * @return the theatreId of this Promotion
     */
    OptionalInt getTheatreId();
    
    /**
     * Returns the customerId of this Promotion. The customerId field
     * corresponds to the database column
     * c04cinema.c04cinema.promotion.customer_id.
     * 
     * @return the customerId of this Promotion
     */
    OptionalInt getCustomerId();
    
    /**
     * Returns the staffId of this Promotion. The staffId field corresponds to
     * the database column c04cinema.c04cinema.promotion.staff_id.
     * 
     * @return the staffId of this Promotion
     */
    OptionalInt getStaffId();
    
    /**
     * Returns the price of this Promotion. The price field corresponds to the
     * database column c04cinema.c04cinema.promotion.price.
     * 
     * @return the price of this Promotion
     */
    OptionalDouble getPrice();
    
    /**
     * Returns the picture of this Promotion. The picture field corresponds to
     * the database column c04cinema.c04cinema.promotion.picture.
     * 
     * @return the picture of this Promotion
     */
    Optional<String> getPicture();
    
    /**
     * Sets the id of this Promotion. The id field corresponds to the database
     * column c04cinema.c04cinema.promotion.id.
     * 
     * @param id to set of this Promotion
     * @return   this Promotion instance
     */
    Promotion setId(int id);
    
    /**
     * Sets the code of this Promotion. The code field corresponds to the
     * database column c04cinema.c04cinema.promotion.code.
     * 
     * @param code to set of this Promotion
     * @return     this Promotion instance
     */
    Promotion setCode(String code);
    
    /**
     * Sets the name of this Promotion. The name field corresponds to the
     * database column c04cinema.c04cinema.promotion.name.
     * 
     * @param name to set of this Promotion
     * @return     this Promotion instance
     */
    Promotion setName(String name);
    
    /**
     * Sets the discount of this Promotion. The discount field corresponds to
     * the database column c04cinema.c04cinema.promotion.discount.
     * 
     * @param discount to set of this Promotion
     * @return         this Promotion instance
     */
    Promotion setDiscount(Double discount);
    
    /**
     * Sets the description of this Promotion. The description field corresponds
     * to the database column c04cinema.c04cinema.promotion.description.
     * 
     * @param description to set of this Promotion
     * @return            this Promotion instance
     */
    Promotion setDescription(String description);
    
    /**
     * Sets the startDate of this Promotion. The startDate field corresponds to
     * the database column c04cinema.c04cinema.promotion.startDate.
     * 
     * @param startDate to set of this Promotion
     * @return          this Promotion instance
     */
    Promotion setStartDate(Date startDate);
    
    /**
     * Sets the endDate of this Promotion. The endDate field corresponds to the
     * database column c04cinema.c04cinema.promotion.endDate.
     * 
     * @param endDate to set of this Promotion
     * @return        this Promotion instance
     */
    Promotion setEndDate(Date endDate);
    
    /**
     * Sets the showId of this Promotion. The showId field corresponds to the
     * database column c04cinema.c04cinema.promotion.show_id.
     * 
     * @param showId to set of this Promotion
     * @return       this Promotion instance
     */
    Promotion setShowId(Integer showId);
    
    /**
     * Sets the moveId of this Promotion. The moveId field corresponds to the
     * database column c04cinema.c04cinema.promotion.move_id.
     * 
     * @param moveId to set of this Promotion
     * @return       this Promotion instance
     */
    Promotion setMoveId(Integer moveId);
    
    /**
     * Sets the theatreId of this Promotion. The theatreId field corresponds to
     * the database column c04cinema.c04cinema.promotion.theatre_id.
     * 
     * @param theatreId to set of this Promotion
     * @return          this Promotion instance
     */
    Promotion setTheatreId(Integer theatreId);
    
    /**
     * Sets the customerId of this Promotion. The customerId field corresponds
     * to the database column c04cinema.c04cinema.promotion.customer_id.
     * 
     * @param customerId to set of this Promotion
     * @return           this Promotion instance
     */
    Promotion setCustomerId(Integer customerId);
    
    /**
     * Sets the staffId of this Promotion. The staffId field corresponds to the
     * database column c04cinema.c04cinema.promotion.staff_id.
     * 
     * @param staffId to set of this Promotion
     * @return        this Promotion instance
     */
    Promotion setStaffId(Integer staffId);
    
    /**
     * Sets the price of this Promotion. The price field corresponds to the
     * database column c04cinema.c04cinema.promotion.price.
     * 
     * @param price to set of this Promotion
     * @return      this Promotion instance
     */
    Promotion setPrice(Double price);
    
    /**
     * Sets the picture of this Promotion. The picture field corresponds to the
     * database column c04cinema.c04cinema.promotion.picture.
     * 
     * @param picture to set of this Promotion
     * @return        this Promotion instance
     */
    Promotion setPicture(String picture);
    
    /**
     * Queries the specified manager for the referenced Show. If no such Show
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Optional<Show> findShowId(Manager<Show> foreignManager);
    
    /**
     * Queries the specified manager for the referenced Movie. If no such Movie
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Optional<Movie> findMoveId(Manager<Movie> foreignManager);
    
    /**
     * Queries the specified manager for the referenced Theatre. If no such
     * Theatre exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Optional<Theatre> findTheatreId(Manager<Theatre> foreignManager);
    
    /**
     * Queries the specified manager for the referenced Customer. If no such
     * Customer exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Optional<Customer> findCustomerId(Manager<Customer> foreignManager);
    
    /**
     * Queries the specified manager for the referenced Staff. If no such Staff
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Optional<Staff> findStaffId(Manager<Staff> foreignManager);
    
    enum Identifier implements ColumnIdentifier<Promotion> {
        
        ID          ("id"),
        CODE        ("code"),
        NAME        ("name"),
        DISCOUNT    ("discount"),
        DESCRIPTION ("description"),
        START_DATE  ("startDate"),
        END_DATE    ("endDate"),
        SHOW_ID     ("show_id"),
        MOVE_ID     ("move_id"),
        THEATRE_ID  ("theatre_id"),
        CUSTOMER_ID ("customer_id"),
        STAFF_ID    ("staff_id"),
        PRICE       ("price"),
        PICTURE     ("picture");
        
        private final String columnId;
        private final TableIdentifier<Promotion> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "c04cinema";
        }
        
        @Override
        public String getSchemaId() {
            return "c04cinema";
        }
        
        @Override
        public String getTableId() {
            return "promotion";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Promotion> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}