package com.example.demo.c04cinema.c04cinema.c04cinema.promotion.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.promotion.Promotion;
import com.example.demo.c04cinema.c04cinema.c04cinema.promotion.PromotionImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;
import static com.speedment.runtime.core.util.ResultSetUtil.*;

/**
 * The generated Sql Adapter for a {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.promotion.Promotion} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedPromotionSqlAdapter implements SqlAdapter<Promotion> {
    
    private final TableIdentifier<Promotion> tableIdentifier;
    
    protected GeneratedPromotionSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("c04cinema", "c04cinema", "promotion");
    }
    
    protected Promotion apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setId(          resultSet.getInt(1 + offset))
            .setCode(        resultSet.getString(2 + offset))
            .setName(        resultSet.getString(3 + offset))
            .setDiscount(    getDouble(resultSet, 4 + offset))
            .setDescription( resultSet.getString(5 + offset))
            .setStartDate(   resultSet.getDate(6 + offset))
            .setEndDate(     resultSet.getDate(7 + offset))
            .setShowId(      getInt(resultSet, 8 + offset))
            .setMoveId(      getInt(resultSet, 9 + offset))
            .setTheatreId(   getInt(resultSet, 10 + offset))
            .setCustomerId(  getInt(resultSet, 11 + offset))
            .setStaffId(     getInt(resultSet, 12 + offset))
            .setPrice(       getDouble(resultSet, 13 + offset))
            .setPicture(     resultSet.getString(14 + offset))
            ;
    }
    
    protected PromotionImpl createEntity() {
        return new PromotionImpl();
    }
    
    @Override
    public TableIdentifier<Promotion> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, Promotion> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, Promotion> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}