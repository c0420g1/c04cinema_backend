package com.example.demo.c04cinema.c04cinema.c04cinema.promo_point.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.promo_point.PromoPoint;
import com.example.demo.c04cinema.c04cinema.c04cinema.promo_point.PromoPointImpl;
import com.example.demo.c04cinema.c04cinema.c04cinema.promo_point.PromoPointManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.promo_point.PromoPoint}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedPromoPointManagerImpl 
extends AbstractManager<PromoPoint> 
implements GeneratedPromoPointManager {
    
    private final TableIdentifier<PromoPoint> tableIdentifier;
    
    protected GeneratedPromoPointManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("c04cinema", "c04cinema", "promo_point");
    }
    
    @Override
    public PromoPoint create() {
        return new PromoPointImpl();
    }
    
    @Override
    public TableIdentifier<PromoPoint> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<PromoPoint>> fields() {
        return PromoPointManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<PromoPoint>> primaryKeyFields() {
        return Stream.of(
            PromoPoint.ID
        );
    }
}