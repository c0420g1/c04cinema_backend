package com.example.demo.c04cinema.c04cinema.c04cinema.position.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.position.Position;
import com.example.demo.c04cinema.c04cinema.c04cinema.position.PositionImpl;
import com.example.demo.c04cinema.c04cinema.c04cinema.position.PositionManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.position.Position} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedPositionManagerImpl 
extends AbstractManager<Position> 
implements GeneratedPositionManager {
    
    private final TableIdentifier<Position> tableIdentifier;
    
    protected GeneratedPositionManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("c04cinema", "c04cinema", "position");
    }
    
    @Override
    public Position create() {
        return new PositionImpl();
    }
    
    @Override
    public TableIdentifier<Position> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Position>> fields() {
        return PositionManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Position>> primaryKeyFields() {
        return Stream.of(
            Position.ID
        );
    }
}