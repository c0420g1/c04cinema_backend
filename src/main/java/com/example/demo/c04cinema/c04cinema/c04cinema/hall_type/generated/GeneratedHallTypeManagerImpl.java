package com.example.demo.c04cinema.c04cinema.c04cinema.hall_type.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.hall_type.HallType;
import com.example.demo.c04cinema.c04cinema.c04cinema.hall_type.HallTypeImpl;
import com.example.demo.c04cinema.c04cinema.c04cinema.hall_type.HallTypeManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.hall_type.HallType} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedHallTypeManagerImpl 
extends AbstractManager<HallType> 
implements GeneratedHallTypeManager {
    
    private final TableIdentifier<HallType> tableIdentifier;
    
    protected GeneratedHallTypeManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("c04cinema", "c04cinema", "hall_type");
    }
    
    @Override
    public HallType create() {
        return new HallTypeImpl();
    }
    
    @Override
    public TableIdentifier<HallType> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<HallType>> fields() {
        return HallTypeManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<HallType>> primaryKeyFields() {
        return Stream.of(
            HallType.ID
        );
    }
}