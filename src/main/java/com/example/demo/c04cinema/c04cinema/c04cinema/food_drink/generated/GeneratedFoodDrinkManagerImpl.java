package com.example.demo.c04cinema.c04cinema.c04cinema.food_drink.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.food_drink.FoodDrink;
import com.example.demo.c04cinema.c04cinema.c04cinema.food_drink.FoodDrinkImpl;
import com.example.demo.c04cinema.c04cinema.c04cinema.food_drink.FoodDrinkManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.food_drink.FoodDrink} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedFoodDrinkManagerImpl 
extends AbstractManager<FoodDrink> 
implements GeneratedFoodDrinkManager {
    
    private final TableIdentifier<FoodDrink> tableIdentifier;
    
    protected GeneratedFoodDrinkManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("c04cinema", "c04cinema", "food_drink");
    }
    
    @Override
    public FoodDrink create() {
        return new FoodDrinkImpl();
    }
    
    @Override
    public TableIdentifier<FoodDrink> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<FoodDrink>> fields() {
        return FoodDrinkManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<FoodDrink>> primaryKeyFields() {
        return Stream.of(
            FoodDrink.ID
        );
    }
}