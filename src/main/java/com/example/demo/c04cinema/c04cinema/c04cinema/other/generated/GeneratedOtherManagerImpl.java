package com.example.demo.c04cinema.c04cinema.c04cinema.other.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.other.Other;
import com.example.demo.c04cinema.c04cinema.c04cinema.other.OtherImpl;
import com.example.demo.c04cinema.c04cinema.c04cinema.other.OtherManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.other.Other} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedOtherManagerImpl 
extends AbstractManager<Other> 
implements GeneratedOtherManager {
    
    private final TableIdentifier<Other> tableIdentifier;
    
    protected GeneratedOtherManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("c04cinema", "c04cinema", "other");
    }
    
    @Override
    public Other create() {
        return new OtherImpl();
    }
    
    @Override
    public TableIdentifier<Other> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Other>> fields() {
        return OtherManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Other>> primaryKeyFields() {
        return Stream.of(
            Other.ID
        );
    }
}