package com.example.demo.c04cinema.c04cinema.c04cinema.banner.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.banner.Banner;
import com.example.demo.c04cinema.c04cinema.c04cinema.banner.BannerImpl;
import com.example.demo.c04cinema.c04cinema.c04cinema.banner.BannerManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.banner.Banner} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedBannerManagerImpl 
extends AbstractManager<Banner> 
implements GeneratedBannerManager {
    
    private final TableIdentifier<Banner> tableIdentifier;
    
    protected GeneratedBannerManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("c04cinema", "c04cinema", "banner");
    }
    
    @Override
    public Banner create() {
        return new BannerImpl();
    }
    
    @Override
    public TableIdentifier<Banner> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Banner>> fields() {
        return BannerManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Banner>> primaryKeyFields() {
        return Stream.of(
            Banner.ID
        );
    }
}