package com.example.demo.c04cinema.c04cinema.c04cinema.movie_rated_age.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.movie_rated_age.MovieRatedAge;
import com.example.demo.c04cinema.c04cinema.c04cinema.movie_rated_age.MovieRatedAgeImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.movie_rated_age.MovieRatedAge}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedMovieRatedAgeSqlAdapter implements SqlAdapter<MovieRatedAge> {
    
    private final TableIdentifier<MovieRatedAge> tableIdentifier;
    
    protected GeneratedMovieRatedAgeSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("c04cinema", "c04cinema", "movie_rated_age");
    }
    
    protected MovieRatedAge apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setId(          resultSet.getInt(1 + offset))
            .setName(        resultSet.getString(2 + offset))
            .setDescription( resultSet.getString(3 + offset))
            ;
    }
    
    protected MovieRatedAgeImpl createEntity() {
        return new MovieRatedAgeImpl();
    }
    
    @Override
    public TableIdentifier<MovieRatedAge> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, MovieRatedAge> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, MovieRatedAge> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}