package com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_associate.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.movie.Movie;
import com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_associate.MovieGenreAssociate;
import com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_type.MovieGenreType;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableForeignKeyField;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.util.Optional;
import java.util.OptionalInt;

/**
 * The generated base for the {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_associate.MovieGenreAssociate}-interface
 * representing entities of the {@code movie_genre_associate}-table in the
 * database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedMovieGenreAssociate {
    
    /**
     * This Field corresponds to the {@link MovieGenreAssociate} field that can
     * be obtained using the {@link MovieGenreAssociate#getId()} method.
     */
    IntField<MovieGenreAssociate, Integer> ID = IntField.create(
        Identifier.ID,
        MovieGenreAssociate::getId,
        MovieGenreAssociate::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link MovieGenreAssociate} field that can
     * be obtained using the {@link MovieGenreAssociate#getMovieId()} method.
     */
    ComparableForeignKeyField<MovieGenreAssociate, Integer, Integer, Movie> MOVIE_ID = ComparableForeignKeyField.create(
        Identifier.MOVIE_ID,
        o -> OptionalUtil.unwrap(o.getMovieId()),
        MovieGenreAssociate::setMovieId,
        Movie.ID,
        TypeMapper.identity(),
        false
    );
    /**
     * This Field corresponds to the {@link MovieGenreAssociate} field that can
     * be obtained using the {@link MovieGenreAssociate#getMovieGenreTypeId()}
     * method.
     */
    ComparableForeignKeyField<MovieGenreAssociate, Integer, Integer, MovieGenreType> MOVIE_GENRE_TYPE_ID = ComparableForeignKeyField.create(
        Identifier.MOVIE_GENRE_TYPE_ID,
        o -> OptionalUtil.unwrap(o.getMovieGenreTypeId()),
        MovieGenreAssociate::setMovieGenreTypeId,
        MovieGenreType.ID,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the id of this MovieGenreAssociate. The id field corresponds to
     * the database column c04cinema.c04cinema.movie_genre_associate.id.
     * 
     * @return the id of this MovieGenreAssociate
     */
    int getId();
    
    /**
     * Returns the movieId of this MovieGenreAssociate. The movieId field
     * corresponds to the database column
     * c04cinema.c04cinema.movie_genre_associate.movie_id.
     * 
     * @return the movieId of this MovieGenreAssociate
     */
    OptionalInt getMovieId();
    
    /**
     * Returns the movieGenreTypeId of this MovieGenreAssociate. The
     * movieGenreTypeId field corresponds to the database column
     * c04cinema.c04cinema.movie_genre_associate.movie_genre_type_id.
     * 
     * @return the movieGenreTypeId of this MovieGenreAssociate
     */
    OptionalInt getMovieGenreTypeId();
    
    /**
     * Sets the id of this MovieGenreAssociate. The id field corresponds to the
     * database column c04cinema.c04cinema.movie_genre_associate.id.
     * 
     * @param id to set of this MovieGenreAssociate
     * @return   this MovieGenreAssociate instance
     */
    MovieGenreAssociate setId(int id);
    
    /**
     * Sets the movieId of this MovieGenreAssociate. The movieId field
     * corresponds to the database column
     * c04cinema.c04cinema.movie_genre_associate.movie_id.
     * 
     * @param movieId to set of this MovieGenreAssociate
     * @return        this MovieGenreAssociate instance
     */
    MovieGenreAssociate setMovieId(Integer movieId);
    
    /**
     * Sets the movieGenreTypeId of this MovieGenreAssociate. The
     * movieGenreTypeId field corresponds to the database column
     * c04cinema.c04cinema.movie_genre_associate.movie_genre_type_id.
     * 
     * @param movieGenreTypeId to set of this MovieGenreAssociate
     * @return                 this MovieGenreAssociate instance
     */
    MovieGenreAssociate setMovieGenreTypeId(Integer movieGenreTypeId);
    
    /**
     * Queries the specified manager for the referenced Movie. If no such Movie
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Optional<Movie> findMovieId(Manager<Movie> foreignManager);
    
    /**
     * Queries the specified manager for the referenced MovieGenreType. If no
     * such MovieGenreType exists, an {@code NullPointerException} will be
     * thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Optional<MovieGenreType> findMovieGenreTypeId(Manager<MovieGenreType> foreignManager);
    
    enum Identifier implements ColumnIdentifier<MovieGenreAssociate> {
        
        ID                  ("id"),
        MOVIE_ID            ("movie_id"),
        MOVIE_GENRE_TYPE_ID ("movie_genre_type_id");
        
        private final String columnId;
        private final TableIdentifier<MovieGenreAssociate> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "c04cinema";
        }
        
        @Override
        public String getSchemaId() {
            return "c04cinema";
        }
        
        @Override
        public String getTableId() {
            return "movie_genre_associate";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<MovieGenreAssociate> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}