package com.example.demo.c04cinema.c04cinema.c04cinema.role_account.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.role_account.RoleAccount;
import com.example.demo.c04cinema.c04cinema.c04cinema.role_account.RoleAccountImpl;
import com.example.demo.c04cinema.c04cinema.c04cinema.role_account.RoleAccountManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.role_account.RoleAccount}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedRoleAccountManagerImpl 
extends AbstractManager<RoleAccount> 
implements GeneratedRoleAccountManager {
    
    private final TableIdentifier<RoleAccount> tableIdentifier;
    
    protected GeneratedRoleAccountManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("c04cinema", "c04cinema", "role_account");
    }
    
    @Override
    public RoleAccount create() {
        return new RoleAccountImpl();
    }
    
    @Override
    public TableIdentifier<RoleAccount> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<RoleAccount>> fields() {
        return RoleAccountManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<RoleAccount>> primaryKeyFields() {
        return Stream.of(
            RoleAccount.ID
        );
    }
}