package com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_associate.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_associate.MovieGenreAssociate;
import com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_associate.MovieGenreAssociateImpl;
import com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_associate.MovieGenreAssociateManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_associate.MovieGenreAssociate}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedMovieGenreAssociateManagerImpl 
extends AbstractManager<MovieGenreAssociate> 
implements GeneratedMovieGenreAssociateManager {
    
    private final TableIdentifier<MovieGenreAssociate> tableIdentifier;
    
    protected GeneratedMovieGenreAssociateManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("c04cinema", "c04cinema", "movie_genre_associate");
    }
    
    @Override
    public MovieGenreAssociate create() {
        return new MovieGenreAssociateImpl();
    }
    
    @Override
    public TableIdentifier<MovieGenreAssociate> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<MovieGenreAssociate>> fields() {
        return MovieGenreAssociateManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<MovieGenreAssociate>> primaryKeyFields() {
        return Stream.of(
            MovieGenreAssociate.ID
        );
    }
}