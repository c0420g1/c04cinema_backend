package com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_type.generated;

import com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_type.MovieGenreType;
import com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_type.MovieGenreTypeImpl;
import com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_type.MovieGenreTypeManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.example.demo.c04cinema.c04cinema.c04cinema.movie_genre_type.MovieGenreType}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedMovieGenreTypeManagerImpl 
extends AbstractManager<MovieGenreType> 
implements GeneratedMovieGenreTypeManager {
    
    private final TableIdentifier<MovieGenreType> tableIdentifier;
    
    protected GeneratedMovieGenreTypeManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("c04cinema", "c04cinema", "movie_genre_type");
    }
    
    @Override
    public MovieGenreType create() {
        return new MovieGenreTypeImpl();
    }
    
    @Override
    public TableIdentifier<MovieGenreType> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<MovieGenreType>> fields() {
        return MovieGenreTypeManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<MovieGenreType>> primaryKeyFields() {
        return Stream.of(
            MovieGenreType.ID
        );
    }
}